// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TARge20.Data;

namespace TARge20.Data.Migrations
{
    [DbContext(typeof(TARge20DbContext))]
    [Migration("20210527081109_Kaust")]
    partial class Kaust
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TARge20.Core.Domain.Children", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("TARge20.Core.Domain.HaigusleheTyyp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HaiguslehedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nimetus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HaiguslehedId");

                    b.ToTable("HaigusleheTyyp");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Haiguslehed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("HaigusleheAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HaigusleheLõpp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Haiguslehed");
                });

            modelBuilder.Entity("TARge20.Core.Domain.LaenutatavEse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EsemeNimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LaenutuskordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LaenutuskordId");

                    b.ToTable("LaenutatavEse");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Laenutuskord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LaenutatavEse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LaenutuseAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LaenutuseLõpp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Laenutuskord");
                });

            modelBuilder.Entity("TARge20.Core.Domain.LigipääsuloaTyyp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ligipääs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LigipääsulubaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LigipääsulubaId");

                    b.ToTable("LigipääsuloaTyyp");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Ligipääsuluba", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LigipääsuTyyp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoaAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoaLõpp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Ligipääsuluba");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Palved", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PalveKpv")
                        .HasColumnType("datetime2");

                    b.Property<string>("Saaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Saatja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Palved");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Puhkus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("puhkuseAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("puhkuseLõpp")
                        .HasColumnType("datetime2");

                    b.Property<string>("puhkuseTyyp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Puhkus");
                });

            modelBuilder.Entity("TARge20.Core.Domain.PuhkuseTyyp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nimetus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("puhkusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("puhkusId");

                    b.ToTable("PuhkuseTyyp");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Tervisekontrollid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tulemus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Tervisekontrollid");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Töösuhe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Koormus")
                        .HasColumnType("int");

                    b.Property<DateTime>("TöösuhteAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TöösuhteLõpp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Töösuhe");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Vihjed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Saaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VihjeKpv")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Vihjed");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Children", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", "Employee")
                        .WithMany("Children")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TARge20.Core.Domain.HaigusleheTyyp", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", null)
                        .WithMany("HaigusleheTyyp")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("TARge20.Core.Domain.Haiguslehed", "Haiguslehed")
                        .WithMany()
                        .HasForeignKey("HaiguslehedId");

                    b.Navigation("Haiguslehed");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Haiguslehed", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", "Employee")
                        .WithMany("Haiguslehed")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TARge20.Core.Domain.LaenutatavEse", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", null)
                        .WithMany("LaenutatavEse")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("TARge20.Core.Domain.Laenutuskord", "Laenutuskord")
                        .WithMany()
                        .HasForeignKey("LaenutuskordId");

                    b.Navigation("Laenutuskord");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Laenutuskord", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", "Employee")
                        .WithMany("Laenutuskord")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TARge20.Core.Domain.LigipääsuloaTyyp", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", null)
                        .WithMany("LigipääsuloaTyyp")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("TARge20.Core.Domain.Ligipääsuluba", "Ligipääsuluba")
                        .WithMany()
                        .HasForeignKey("LigipääsulubaId");

                    b.Navigation("Ligipääsuluba");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Ligipääsuluba", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", "Employee")
                        .WithMany("Ligipääsuluba")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Palved", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", null)
                        .WithMany("Palved")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Puhkus", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", "Employee")
                        .WithMany("Puhkus")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TARge20.Core.Domain.PuhkuseTyyp", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", null)
                        .WithMany("PuhkuseTyyp")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("TARge20.Core.Domain.Puhkus", "puhkus")
                        .WithMany()
                        .HasForeignKey("puhkusId");

                    b.Navigation("puhkus");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Tervisekontrollid", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", "Employee")
                        .WithMany("Tervisekontrollid")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Töösuhe", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", "Employee")
                        .WithMany("Töösuhe")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Vihjed", b =>
                {
                    b.HasOne("TARge20.Core.Domain.Employee", null)
                        .WithMany("Vihjed")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("TARge20.Core.Domain.Employee", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Haiguslehed");

                    b.Navigation("HaigusleheTyyp");

                    b.Navigation("LaenutatavEse");

                    b.Navigation("Laenutuskord");

                    b.Navigation("LigipääsuloaTyyp");

                    b.Navigation("Ligipääsuluba");

                    b.Navigation("Palved");

                    b.Navigation("Puhkus");

                    b.Navigation("PuhkuseTyyp");

                    b.Navigation("Tervisekontrollid");

                    b.Navigation("Töösuhe");

                    b.Navigation("Vihjed");
                });
#pragma warning restore 612, 618
        }
    }
}
